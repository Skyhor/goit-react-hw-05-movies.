{"version":3,"file":"static/js/831.2de0b291.chunk.js","mappings":"kOAyCA,UArCgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qFACED,GAAa,GADf,UAEQE,EAAAA,EAAAA,IAAWR,GACdS,KAAKL,GACLM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,IACAC,SAAQ,WACPT,GAAa,EACd,IATL,4CADc,uBAAC,WAAD,wBAYdU,EACD,GAAE,CAAChB,KAGDK,GACDF,IACE,wBACGA,EAAQc,OACPd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQnB,EAAX,EAAWA,GAAIoB,EAAf,EAAeA,QAAf,OACV,2BACE,uBAAID,KACJ,uBAAIC,MAFGpB,EADC,KAOZ,sEAKT,C,mMCvCKqB,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8B7B,GAA9B,wFACkBuB,EAAAA,EAAAA,GAAM,SAAD,OAAUvB,GAAM,CAC1CwB,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAOC,GAAlC,wFACkBT,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTU,MAAAA,EACAC,KAAAA,KALC,cACCN,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAAiCjC,GAAjC,wFACkBuB,EAAAA,EAAAA,GAAM,SAAD,OAAUvB,EAAV,YAAwB,CAClDwB,OAAQ,CACNC,QAASJ,EACTa,SAAU,WAJT,cACCR,EADD,yBAOEA,EAASC,KAAKQ,MAPhB,kEAWA,SAAe3B,EAAtB,kC,aAAO,O,oBAAA,WAA0BR,GAA1B,wFACkBuB,EAAAA,EAAAA,GAAM,SAAD,OAAUvB,EAAV,YAAwB,CAClDwB,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAxCPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/pages/Reviews.jsx","services/FilmsApi.js"],"sourcesContent":["import { ReviewsApp } from 'services/FilmsApi';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function ApiReviews() {\n      setIsLoading(true);\n      await ReviewsApp(id)\n        .then(setReviews)\n        .catch(error => {\n          console.log(error.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n    ApiReviews();\n  }, [id]);\n\n  return (\n    !isLoading &&\n    reviews && (\n      <ul>\n        {reviews.length ? (\n          reviews.map(({ author, id, content }) => (\n            <li key={id}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>No information about Reviews ðŸ˜¢</p>\n        )}\n      </ul>\n    )\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst KEY = '16bfd7302118df957168aab71a34a8e2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function FilmsApi() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\nexport async function fetchEventById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function SearchFilms(query, page) {\n  const response = await axios(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n      page,\n    },\n  });\n  return response.data;\n}\n\nexport async function ActorWarehouseApp(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n}\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>\n\nexport async function ReviewsApp(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n      // language: 'en-US',\n    },\n  });\n  return response.data.results;\n}\n// actor's warehouse\n// Reviews;\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n"],"names":["id","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","ReviewsApp","then","catch","error","console","log","message","finally","ApiReviews","length","map","author","content","KEY","FilmsApi","axios","params","api_key","response","data","results","fetchEventById","SearchFilms","query","page","ActorWarehouseApp","language","cast"],"sourceRoot":""}