{"version":3,"file":"static/js/305.b48744a4.chunk.js","mappings":"sRACaA,EAAKC,EAAAA,GAAAA,GAAH,0FAKFC,EAAKD,EAAAA,GAAAA,GAAH,+C,mBC2Cf,EA3CuB,WACrB,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qFACEH,GAAa,GADf,UAEQI,EAAAA,EAAAA,IAAkBH,GACrBI,KAAKP,GACLQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,IACAC,SAAQ,WACPX,GAAa,EACd,IATL,4CADc,uBAAC,WAAD,wBAYdY,EACD,GAAE,CAACX,KAGDF,GACDF,IACE,SAACJ,EAAD,UACGI,EAAKgB,KAAI,gBAAGhB,EAAH,EAAGA,KAAMI,EAAT,EAASA,GAAIa,EAAb,EAAaA,aAAb,OACR,UAACnB,EAAD,WACGmB,GACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAI,SACJC,MAAM,MACNC,OAAO,SAGT,gBAAKH,IAAKI,EAAMH,IAAI,SAASC,MAAM,MAAMC,OAAO,SAElD,uBAAIrB,MAXGI,EADD,KAkBjB,C,mMC/CKmB,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8B3B,GAA9B,wFACkBqB,EAAAA,EAAAA,GAAM,SAAD,OAAUrB,GAAM,CAC1CsB,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAOC,GAAlC,wFACkBT,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTU,MAAAA,EACAC,KAAAA,KALC,cACCN,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAetB,EAAtB,kC,aAAO,O,oBAAA,WAAiCH,GAAjC,wFACkBqB,EAAAA,EAAAA,GAAM,SAAD,OAAUrB,EAAV,YAAwB,CAClDsB,OAAQ,CACNC,QAASJ,EACTY,SAAU,WAJT,cACCP,EADD,yBAOEA,EAASC,KAAKO,MAPhB,kEAWA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BjC,GAA1B,wFACkBqB,EAAAA,EAAAA,GAAM,SAAD,OAAUrB,EAAV,YAAwB,CAClDsB,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAxCPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/pages/Actor.stuled.js","components/pages/ActorWarehouse.jsx","services/FilmsApi.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\nexport const Li = styled.li`\n  margin-right: 20px;\n`;\n","import { ActorWarehouseApp } from 'services/FilmsApi';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Ul, Li } from './Actor.stuled';\nimport plug from '../../images/plugactor.png';\nconst ActorWarehouse = () => {\n  const [name, setName] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function ApiActors() {\n      setIsLoading(true);\n      await ActorWarehouseApp(id)\n        .then(setName)\n        .catch(error => {\n          console.log(error.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n    ApiActors();\n  }, [id]);\n\n  return (\n    !isLoading &&\n    name && (\n      <Ul>\n        {name.map(({ name, id, profile_path }) => (\n          <Li key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                alt=\"Actors\"\n                width=\"150\"\n                height=\"250\"\n              />\n            ) : (\n              <img src={plug} alt=\"Actors\" width=\"150\" height=\"250\" />\n            )}\n            <p>{name}</p>\n          </Li>\n        ))}\n      </Ul>\n    )\n  );\n};\nexport default ActorWarehouse;\n","import axios from 'axios';\nconst KEY = '16bfd7302118df957168aab71a34a8e2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function FilmsApi() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\nexport async function fetchEventById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function SearchFilms(query, page) {\n  const response = await axios(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n      page,\n    },\n  });\n  return response.data;\n}\n\nexport async function ActorWarehouseApp(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n}\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>\n\nexport async function ReviewsApp(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n      // language: 'en-US',\n    },\n  });\n  return response.data.results;\n}\n// actor's warehouse\n// Reviews;\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n"],"names":["Ul","styled","Li","useState","name","setName","isLoading","setIsLoading","id","useParams","useEffect","ActorWarehouseApp","then","catch","error","console","log","message","finally","ApiActors","map","profile_path","src","alt","width","height","plug","KEY","FilmsApi","axios","params","api_key","response","data","results","fetchEventById","SearchFilms","query","page","language","cast","ReviewsApp"],"sourceRoot":""}